# -*- coding: utf-8 -*-
"""Python_Assessment_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1zm62Jvu5UG9YtEKnSXvay0Rr2UKSt6m5

# Below is the image whose text is extracted in a Python List Format
"""

import matplotlib.pyplot as plt
import matplotlib.image as mpimg
import requests
from io import BytesIO

# Google Drive file ID
file_id = '1i5QD9NA2HLIBkX0HmxSLi-2wGfVOS0XY'
# Direct download URL
url = f'https://drive.google.com/uc?export=download&id={file_id}'

# Fetch the image from the URL
response = requests.get(url)
img = mpimg.imread(BytesIO(response.content), format='jpg')

# Display the image at 400x800 resolution
plt.figure(figsize=(12, 6))  # Size in inches (width, height)
plt.imshow(img)
plt.axis('off')  # Hide axes
plt.show()

"""# You need to write FindStopsInfo() function in such a way that any number of stops information it comes it should get picked and the response should look like below.

"""

import re
main_list = [
    ["Consignor ( 1 )", None, None, None],
    [
        "Cibaria International\n705 Columbia Drive\nRiverside, CA. 92507\nPhone: 951-823-8490",
        "Shipping Date\n06/04/2024",
        None,
        "Pickup Number\nSO-08983",
    ],
    [None, "Shipping Hours\n8:00AM - 3:00PM", None, "Appointment\nNo"],
    [None, "Weight\n22,656 lbs", None, "Commodity\nEdible Oil"],
    [None, "Pallet Count\n12", "Service Type\nLTL", "Description\nnon-stack pallets"],
    [None, "Notes: Required temp, 76 degrees", None, None],
    ["Consignee ( 1 )", None, None, None],
    [
        "Schoep's Ice Cream\n2070 Helena St\nMadison, WI. 53704\nPhone: 608-338-5374",
        "Delivery Date\n06/07/2024",
        None,
        "P.O. Number\n115805",
    ],
    [None, "Receiving Hours\n8:00AM - 3:00PM, by Appt", None, "Appointment\nYes:"],
    [None, "Weight\n22,656 lbs", None, "Commodity\nEdible Oil"],
    [None, "Pallet Count\n12", "Service Type\nLTL", "Description"],
    [None, "Notes: Call for delivery appt in advance", None, None],
]


def GetBlankStopTemplate():
    stop = {
        "Address1": "",
        "Address2": "",
        "AppNumber": "",
        "City": "",
        "Contact": "",
        "FCFS": 0,
        "FacilityName": "",
        "FromDate": "",
        "FromTime": "",
        "IsAppRequired": 0,
        "Notes": "",
        "PONumber": "",
        "Phone": "",
        "ReturnTrailer": "0",
        "SealNumber": "",
        "State": "",
        "StopItems": [
            {
                "CONumber": "",
                "Commodity": "",
                "ItemNumber": "",
                "Length": "",
                "PONumber": "",
                "Pallets": "",
                "PieceCount": "",
                "Weight": ""
            }
        ],
        "StopNumber": "",
        "StopType": "",
        "Temperature": "",
        "ToDate": "",
        "ToTime": "",
        "Zip": ""
    }
    return stop


def FindStopsInfo(main_list):
    stops = []
    current_stop = None

    for row in main_list:
        for col in row:
            if col == None:
                continue

            if col.startswith("Consignor"):
                current_stop = GetBlankStopTemplate()
                current_stop["StopType"] = "Pickup"
                current_stop["StopNumber"] = "1"
            elif col.startswith("Consignee"):
                if current_stop:
                    stops.append(current_stop)
                current_stop = GetBlankStopTemplate()
                current_stop["StopType"] = "Delivery"
                current_stop["StopNumber"] = "1"

            regex = re.match(r'(.*)\n(.*)\n(.*), (\w{2})\. (\d{5})\nPhone: (\d{3}-\d{3}-\d{4})', col)
            if regex:
                current_stop["FacilityName"] = regex.group(1)
                current_stop["Address1"] = regex.group(2)
                current_stop["City"] = regex.group(3)
                current_stop["State"] = regex.group(4)
                current_stop["Zip"] = regex.group(5)
                current_stop["Phone"] = regex.group(6)

            if "Date" in col:
                date = col.split('\n')[1]
                current_stop["FromDate"] = date
                current_stop["ToDate"] = date

            if "Hours" in col:
                hours = col.split('\n')[1]
                times = re.findall(r'\d+:\d+[AP]M', hours)
                if len(times) == 2:
                    current_stop["FromTime"] = times[0]
                    current_stop["ToTime"] = times[1]

            if "Weight" in col:
                current_stop["StopItems"][0]["Weight"] = col.split('\n')[1].replace(' lbs', '')

            if "Pallet Count" in col:
                current_stop["StopItems"][0]["Pallets"] = col.split('\n')[1]

            if "Commodity" in col:
                current_stop["StopItems"][0]["Commodity"] = col.split('\n')[1]

            if "Pickup Number" in col:
                current_stop["StopItems"][0]["CONumber"] = col.split('\n')[1]

            if "P.O. Number" in col:
                current_stop["PONumber"] = col.split('\n')[1]

            if "Appointment" in col:
                current_stop["IsAppRequired"] = 1 if "Yes" in col else 0

            if "Notes:" in col:
                current_stop["Notes"] = col.split(': ')[1]
                if "temp" in col.lower():
                    temp = re.search(r'\d+', col)
                    if temp:
                        current_stop["Temperature"] = temp.group()

    if current_stop:
        stops.append(current_stop)

    return stops

stopsInfo = FindStopsInfo(main_list)
print(stopsInfo)

"""# Sample Response


Expected Output
```
[
    {
        "Address1": "705 Columbia Drive",
        "Address2": "",
        "AppNumber": "",
        "City": "Riverside",
        "Contact": "",
        "FCFS": 0,
        "FacilityName": "Cibaria International",
        "FromDate": "06/04/2024",
        "FromTime": "8:00AM",
        "IsAppRequired": 0,
        "Notes": "Required temp, 76 degrees",
        "PONumber": "SO-08983",
        "Phone": "951-823-8490",
        "ReturnTrailer": "0",
        "SealNumber": "",
        "State": "CA",
        "StopItems": [
            {
                "CONumber": "",
                "Commodity": "Edible Oil",
                "ItemNumber": "",
                "Length": "",
                "PONumber": "",
                "Pallets": "12",
                "PieceCount": "",
                "Weight": "22,656"
            }
        ],
        "StopNumber": "1",
        "StopType": "Pickup",
        "Temperature": "",
        "ToDate": "",
        "ToTime": "3:00PM",
        "Zip": "92507"
    },
    {
        "Address1": "2070 Helena St",
        "Address2": "",
        "AppNumber": "",
        "City": "Madison",
        "Contact": "",
        "FCFS": 0,
        "FacilityName": "Schoep's Ice Cream",
        "FromDate": "06/07/2024",
        "FromTime": "8:00AM",
        "IsAppRequired": 0,
        "Notes": "Call for delivery appt in advance",
        "PONumber": "115805",
        "Phone": "608-338-5374",
        "ReturnTrailer": "0",
        "SealNumber": "",
        "State": "WI",
        "StopItems": [
            {
                "CONumber": "",
                "Commodity": "Edible Oil",
                "ItemNumber": "",
                "Length": "",
                "PONumber": "",
                "Pallets": "12",
                "PieceCount": "",
                "Weight": "22,656"
            }
        ],
        "StopNumber": "2",
        "StopType": "Drop",
        "Temperature": "",
        "ToDate": "",
        "ToTime": "3:00PM",
        "Zip": "53704"
    }
]
```


"""

